version: "3.9"

services:
  wireguard:
    image: weejewel/wg-easy:latest
    container_name: wireguard
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      # Change the server's hostname (clients will connect to):
      - WG_HOST=${WGUI_HOST}
      # Change the Web UI Password:
      - PASSWORD=${WGUI_PASSWORD}
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1
    labels:
      - "traefik.enable=true"
      # UDP Routers
      - "traefik.udp.routers.wireguard-udp.entrypoints=streaming"
      # UDP Services
      - "traefik.udp.routers.wireguard-udp.service=wireguard-udp-svc"
      - "traefik.udp.services.wireguard-udp-svc.loadbalancer.server.port=51820"
      # HTTP Routers
      - "traefik.http.routers.wireguard-ui.entrypoints=web,websecure"
      - "traefik.http.routers.wireguard-ui.rule=Host(`${WGUI_HOST}`)"
      # HTTP Services
      - "traefik.http.routers.wireguard-ui.tls.certresolver=letsencrypt"
      - "traefik.http.services.wireguard-ui-svc.loadbalancer.server.port=51821"
    volumes:
      - /opt/server-apps/wireguard:/etc/wireguard

  kasm:
    image: lscr.io/linuxserver/kasm:latest
    container_name: kasm
    privileged: true
    environment:
      - KASM_PORT=443
      - TZ=Europe/Kyiv
    labels:
      - "traefik.enable=true"
      # HTTP Routers
      - "traefik.http.routers.kasm.entrypoints=websecure"
      - "traefik.http.routers.kasm.rule=Host(`${KASM_HOST}`)"
      # HTTP Services
      - "traefik.http.routers.kasm.tls=true"
      - "traefik.http.routers.kasm.tls.certresolver=letsencrypt"
      - "traefik.http.services.kasm-svc.loadbalancer.server.port=443"
      - "traefik.http.services.kasm-svc.loadbalancer.server.scheme=https"
    volumes:
      - /opt/server-apps/kasm/data:/opt
      - /opt/server-apps/kasm/profiles:/profiles
    # Uncomment if you want to access the webui from outside the container
    # ports:
    #   - 3000:3000
    restart: unless-stopped

  code-server:
    image: lscr.io/linuxserver/code-server:latest
    container_name: code-server
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - PASSWORD=${CODE_SERVER_PASSWORD}
      - SUDO_PASSWORD=${CODE_SERVER_PASSWORD}
      - PROXY_DOMAIN=${CODE_SERVER_HOST}
      - DEFAULT_WORKSPACE=/config/workspace
    labels:
      - "traefik.enable=true"
      # HTTP Routers
      - "traefik.http.routers.code-server.entrypoints=websecure"
      - "traefik.http.routers.code-server.rule=Host(`${CODE_SERVER_HOST}`)"
      # HTTP Services
      - "traefik.http.routers.code-server.tls=true"
      - "traefik.http.routers.code-server.tls.certresolver=letsencrypt"
      - "traefik.http.services.code-server-svc.loadbalancer.server.port=8443"
      - "traefik.http.services.code-server-svc.loadbalancer.server.scheme=https"
    volumes:
      - ./code-server/config:/config
    ports:
      - 8443:8443
    restart: unless-stopped

  traefik:
    image: traefik:v2.9.6
    container_name: traefik
    command:
      - "--api.insecure=false"
      - "--providers.docker=true"
      # HTTP & UDP Routers
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entryPoints.streaming.address=:51820/udp"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      # SSL Certificates
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=${LETSENCTYPT_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      # Kasm (insecure connection between Traefik and the backend servers)
      - "--serverstransport.insecureskipverify"
      - "--log=true"
      - "--log.level=DEBUG"
    network_mode: host
    restart: unless-stopped
    volumes:
      - /opt/server-apps/letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock